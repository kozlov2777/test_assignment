"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"
        This test verifies the complete purchase flow:
        1. Using Selenium WebDriver, open the main page
        2. Get login/password from the main page
        3. Use the obtained credentials to login
        4. Select multiple products to the cart
        5. Open the cart and remove all products except one, save the price
        6. Complete Checkout, verify Total
        7. Click Finish and verify completion message
        ","448","Verify complete purchase flow from login to order confirmation","UI Tests","Thu Apr 10 09:54:45 GMT 2025","passed","Thu Apr 10 09:54:46 GMT 2025","TestPurchaseFlow","Checkout Flow","",""
"
        This test verifies that the API correctly returns a post when requested by ID:
        1. Sends a GET request to retrieve a post by ID
        2. Verifies the status code is 200 OK
        3. Validates that the response contains the 'title' field as a string
        4. Validates the complete response schema using Pydantic model
        ","87","Verify successful retrieval of a post by ID","API Tests","Thu Apr 10 09:54:44 GMT 2025","passed","Thu Apr 10 09:54:44 GMT 2025","TestJsonPlaceholder","JSONPlaceholder API","",""
"
        This test verifies that the API correctly handles requests for non-existent posts:
        1. Sends a GET request with an ID that doesn't exist
        2. Verifies the status code is 404 Not Found
        3. Validates that the response body is an empty JSON object
        ","83","Verify 404 response when requesting a non-existent post","API Tests","Thu Apr 10 09:54:44 GMT 2025","passed","Thu Apr 10 09:54:44 GMT 2025","TestJsonPlaceholder","JSONPlaceholder API","",""
